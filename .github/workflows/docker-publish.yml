# This workflow builds, tests, and publishes the Docker image for the Home Assistant addon to GitHub Packages.

name: Docker Publish

on:
  push:
    branches:
      - main
      - hass-addon
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0
      - 'v*.*.*-*'
jobs:
  build_and_publish:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read version from file
        id: get_version # Assign an ID to this step to access its outputs
        run: |
          VERSION=$(cat VERSION) # Read content of VERSION file
          echo "version=$VERSION" >> "$GITHUB_OUTPUT" # Set it as an output for this step
          # Make sure the VERSION file exists at the root of your repo,
          # or adjust the path: $(cat path/to/your/VERSION)

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-mock # Ensure test dependencies are installed

      - name: Run tests
        run: |
          PYTHONPATH=.:$PYTHONPATH pytest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    #   - name: Determine image tags
    #     id: meta
    #     run: |
    #       IMAGE_NAME="ghcr.io/${{ github.repository }}/pv_forecast"
    #       TAGS=""
    #       if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
    #         TAGS="${IMAGE_NAME}:latest"
    #       elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
    #         TAGS="${IMAGE_NAME}:${{ github.ref_name }}"
    #       fi
    #       echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            my-docker-hub-username/my-app
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ steps.get_version.outputs.version }} # Use the version from your file
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=branch,enable=${{ github.event_name == 'pull_request' }} # For PRs, use branch name
            type=sha,format=short,enable=${{ github.event_name == 'pull_request' }} # Short SHA for PRs
            # You can still include other tags from git metadata if desired,
            # but using your file as the primary version is the goal here.
            # Example: type=semver,pattern={{version}} # if your git tags match semver

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./pv-forecast-addon/Dockerfile
          platforms: linux/amd64,linux/aarch64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
