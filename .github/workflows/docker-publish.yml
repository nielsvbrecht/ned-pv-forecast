# This workflow builds, tests, and publishes the Docker image for the Home Assistant addon to GitHub Packages.

name: Docker Publish

on:
  push:
    branches:
      - main
      - hass-addon
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0
      - 'v*.*.*-*'
jobs:
  build_and_publish:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Read version from VERSION file
        id: get_version
        run: |
          VERSION=$(cat VERSION)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Update version in config.json
        run: |
          jq '.version = "${{ steps.get_version.outputs.version }}"' pv-forecast-addon/config.json > pv-forecast-addon/config.json.tmp
          mv pv-forecast-addon/config.json.tmp pv-forecast-addon/config.json

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-mock # Ensure test dependencies are installed

      - name: Run tests
        run: |
          PYTHONPATH=.:$PYTHONPATH pytest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/pv_forecast
          tags: |
            # Tag with the version from config.json on any push
            type=raw,value=${{ steps.get_version.outputs.version }}
            # Tag with 'latest' on pushes to the default branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            # Tag with the git tag name on version tag pushes
            type=ref,event=tag
            # Tag with the branch name on branch pushes (excluding default branch)
            type=ref,event=branch,enable=${{ github.ref != format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./pv-forecast-addon/Dockerfile
          platforms: linux/amd64,linux/aarch64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
